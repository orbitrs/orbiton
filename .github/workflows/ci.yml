name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout orbiton
        uses: actions/checkout@v4
        with:
          path: orbiton
          fetch-depth: 1

      - name: Checkout orbit
        uses: actions/checkout@v4
        with:
          repository: orbitrs/orbit
          path: orbit
          fetch-depth: 1
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout orbit-analyzer
        uses: actions/checkout@v4
        with:
          repository: orbitrs/orbit-analyzer
          path: orbit-analyzer
          fetch-depth: 1
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup workspace for dependencies
        run: |
          echo "Current directory structure:"
          pwd
          ls -la
          
          # Create a workspace Cargo.toml at the root of the checkout directory
          cat > Cargo.toml << 'EOF'
          [workspace]
          members = [
              "orbit",
              "orbit-analyzer",
              "orbiton",
          ]

          [workspace.package]
          version = "0.1.0"
          edition = "2021"
          authors = ["Orbit Team <orbit@example.com>"]
          license = "MIT OR Apache-2.0"
          repository = "https://github.com/orbitrs/orbit"

          [workspace.dependencies]
          serde = { version = "1.0", features = ["derive"] }
          serde_json = "1.0"
          thiserror = "1.0"
          log = "0.4"
          EOF

          # Check if Cargo.toml exists in each repository
          echo "Checking if Cargo.toml files exist:"
          [ -f "orbiton/Cargo.toml" ] && echo "orbiton/Cargo.toml exists" || echo "orbiton/Cargo.toml does not exist"
          [ -f "orbit/Cargo.toml" ] && echo "orbit/Cargo.toml exists" || echo "orbit/Cargo.toml does not exist"
          [ -f "orbit-analyzer/Cargo.toml" ] && echo "orbit-analyzer/Cargo.toml exists" || echo "orbit-analyzer/Cargo.toml does not exist"
          
          # Update orbiton's Cargo.toml to use local paths
          if [ -f "orbiton/Cargo.toml" ]; then
            echo "Updating orbiton dependencies to use local paths"
            sed -i 's|orbit = { git = "https://github.com/orbitrs/orbit.git" }|orbit = { path = "../orbit" }|' orbiton/Cargo.toml || echo "Failed to update orbit dependency"
            sed -i 's|orbit-analyzer = { git = "https://github.com/orbitrs/orbit-analyzer.git" }|orbit-analyzer = { path = "../orbit-analyzer" }|' orbiton/Cargo.toml || echo "Failed to update orbit-analyzer dependency"
          else
            echo "ERROR: orbiton/Cargo.toml does not exist, cannot update dependencies"
            ls -la orbiton/
          fi
          
          # Show workspace structure
          echo "Workspace Cargo.toml files:"
          find . -name "Cargo.toml" | sort
          
          # Show dependencies in orbiton's Cargo.toml if it exists
          if [ -f "orbiton/Cargo.toml" ]; then
            echo "Orbiton dependencies:"
            grep -A 10 "dependencies" orbiton/Cargo.toml
          else
            echo "Cannot show dependencies, orbiton/Cargo.toml does not exist"
          fi

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            . -> target

      - name: Format check
        run: |
          # Check if orbiton directory exists before attempting to access it
          if [ -d "orbiton" ]; then
            cd orbiton
            cargo fmt --check
          else
            echo "ERROR: orbiton directory does not exist"
            pwd
            ls -la
            exit 1
          fi

      - name: Clippy
        run: |
          # Check if orbiton directory exists before attempting to access it
          if [ -d "orbiton" ]; then
            cd orbiton
            cargo clippy --all-features --all-targets -- -D warnings
          else
            echo "ERROR: orbiton directory does not exist"
            pwd
            ls -la
            exit 1
          fi

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout orbiton
        uses: actions/checkout@v4
        with:
          path: orbiton
          fetch-depth: 1

      - name: Checkout orbit
        uses: actions/checkout@v4
        with:
          repository: orbitrs/orbit
          path: orbit
          fetch-depth: 1
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout orbit-analyzer
        uses: actions/checkout@v4
        with:
          repository: orbitrs/orbit-analyzer
          path: orbit-analyzer
          fetch-depth: 1
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup workspace for dependencies
        run: |
          echo "Current directory structure:"
          pwd
          ls -la
          
          # Create a workspace Cargo.toml at the root of the checkout directory
          cat > Cargo.toml << 'EOF'
          [workspace]
          members = [
              "orbit",
              "orbit-analyzer",
              "orbiton",
          ]

          [workspace.package]
          version = "0.1.0"
          edition = "2021"
          authors = ["Orbit Team <orbit@example.com>"]
          license = "MIT OR Apache-2.0"
          repository = "https://github.com/orbitrs/orbit"

          [workspace.dependencies]
          serde = { version = "1.0", features = ["derive"] }
          serde_json = "1.0"
          thiserror = "1.0"
          log = "0.4"
          EOF

          # Check if Cargo.toml exists in each repository
          echo "Checking if Cargo.toml files exist:"
          [ -f "orbiton/Cargo.toml" ] && echo "orbiton/Cargo.toml exists" || echo "orbiton/Cargo.toml does not exist"
          [ -f "orbit/Cargo.toml" ] && echo "orbit/Cargo.toml exists" || echo "orbit/Cargo.toml does not exist"
          [ -f "orbit-analyzer/Cargo.toml" ] && echo "orbit-analyzer/Cargo.toml exists" || echo "orbit-analyzer/Cargo.toml does not exist"
          
          # Update orbiton's Cargo.toml to use local paths
          if [ -f "orbiton/Cargo.toml" ]; then
            echo "Updating orbiton dependencies to use local paths"
            sed -i 's|orbit = { git = "https://github.com/orbitrs/orbit.git" }|orbit = { path = "../orbit" }|' orbiton/Cargo.toml || echo "Failed to update orbit dependency"
            sed -i 's|orbit-analyzer = { git = "https://github.com/orbitrs/orbit-analyzer.git" }|orbit-analyzer = { path = "../orbit-analyzer" }|' orbiton/Cargo.toml || echo "Failed to update orbit-analyzer dependency"
          else
            echo "ERROR: orbiton/Cargo.toml does not exist, cannot update dependencies"
            ls -la orbiton/
          fi
          
          # Show workspace structure
          echo "Workspace Cargo.toml files:"
          find . -name "Cargo.toml" | sort
          
          # Show dependencies in orbiton's Cargo.toml if it exists
          if [ -f "orbiton/Cargo.toml" ]; then
            echo "Orbiton dependencies:"
            grep -A 10 "dependencies" orbiton/Cargo.toml
          else
            echo "Cannot show dependencies, orbiton/Cargo.toml does not exist"
          fi

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - name: Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            . -> target

      - name: Run tests
        run: |
          # Check if orbiton directory exists before attempting to access it
          if [ -d "orbiton" ]; then
            cd orbiton
            cargo test --all-features
          else
            echo "ERROR: orbiton directory does not exist"
            pwd
            ls -la
            exit 1
          fi
