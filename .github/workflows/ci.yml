name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  actions: read
  pull-requests: read
  id-token: write

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Format & Lint
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      # Create workspace directory for handling dependencies
      - name: Create workspace directory
        run: |
          mkdir -p $GITHUB_WORKSPACE/orbitrs-workspace
      
      # Checkout repositories
      - name: Checkout orbiton
        uses: actions/checkout@v4
        with:
          path: orbitrs-workspace/orbiton
      
      - name: Checkout orbit
        uses: actions/checkout@v4
        with:
          repository: orbitrs/orbit
          path: orbitrs-workspace/orbit
      
      - name: Checkout orlint
        uses: actions/checkout@v4
        with:
          repository: orbitrs/orlint
          path: orbitrs-workspace/orlint
          
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libfontconfig1-dev libfreetype6-dev
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy,rustfmt
      
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: orbitrs-workspace -> target # Changed from orbitrs-workspace/orbiton
      
      - name: Verify dependency paths
        run: |
          cd $GITHUB_WORKSPACE/orbitrs-workspace/orbiton
          if [ ! -f "Cargo.toml" ]; then
            echo "::error::Cargo.toml not found in orbiton directory"
            exit 1
          fi
      
      - name: Create workspace Cargo.toml
        working-directory: orbitrs-workspace # Create this at the root of the checked-out code
        shell: bash
        run: |
          cat > Cargo.toml << 'EOF'
          [workspace]
          members = [
              "orbiton",
              "orbit",
              "orlint"
          ]
          resolver = "2"

          [workspace.dependencies]
          orbit = { path = "orbit", version = "0.1.10" }
          orlint = { path = "orlint", version = "0.1.0" }
          serde = { version = "1.0", features = ["derive"] }
          thiserror = "1.0"
          EOF

      - name: Check code formatting
        working-directory: orbitrs-workspace  # Changed from orbitrs-workspace/orbiton
        run: cargo fmt --all -- --check       # This will now run for the entire workspace
      
      - name: Run clippy
        working-directory: orbitrs-workspace  # Changed from orbitrs-workspace/orbiton
        run: cargo clippy --package orbiton --features ci --all-targets -- -D warnings  # Specify package to run clippy only for orbiton
        
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    needs: check
    timeout-minutes: 45
    strategy:
      matrix:
        include:
          # Linux builds
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          # macOS builds  
          - os: macos-latest
            target: x86_64-apple-darwin
          # Windows builds
          - os: windows-latest
            target: x86_64-pc-windows-msvc
      fail-fast: false
    
    steps:
      - name: Create workspace directory
        run: mkdir -p ${{ github.workspace }}/orbitrs-workspace
      
      # Checkout repositories
      - name: Checkout orbiton
        uses: actions/checkout@v4
        with:
          path: orbitrs-workspace/orbiton
      
      - name: Checkout orbit
        uses: actions/checkout@v4
        with:
          repository: orbitrs/orbit
          path: orbitrs-workspace/orbit
          
      - name: Checkout orlint
        uses: actions/checkout@v4
        with:
          repository: orbitrs/orlint
          path: orbitrs-workspace/orlint
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: orbitrs-workspace/orbiton -> target
          key: ${{ matrix.target }}
      
      - name: Install system dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libfontconfig1-dev libfreetype6-dev
      
      - name: Create workspace Cargo.toml
        working-directory: orbitrs-workspace
        shell: bash
        run: |
          cat > Cargo.toml << 'EOF'
          [workspace]
          members = [
              "orbiton",
              "orbit",
              "orlint"
          ]
          resolver = "2"

          [workspace.dependencies]
          orbit = { path = "orbit", version = "0.1.10" }
          orlint = { path = "orlint", version = "0.1.0" }
          serde = { version = "1.0", features = ["derive"] }
          thiserror = "1.0"
          EOF

      - name: Run tests
        working-directory: orbitrs-workspace  # Changed from orbitrs-workspace/orbiton
        run: cargo test --package orbiton --target ${{ matrix.target }} --features ci  # Specify package to test only orbiton
  
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    needs: check
    timeout-minutes: 15
    steps:
      - name: Create workspace directory
        run: mkdir -p ${{ github.workspace }}/orbitrs-workspace
      
      - name: Checkout orbiton
        uses: actions/checkout@v4
        with:
          path: orbitrs-workspace/orbiton
      
      - name: Checkout orbit
        uses: actions/checkout@v4
        with:
          repository: orbitrs/orbit
          path: orbitrs-workspace/orbit
          
      - name: Checkout orlint
        uses: actions/checkout@v4
        with:
          repository: orbitrs/orlint
          path: orbitrs-workspace/orlint
      
      - name: Install cargo-audit
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-audit
      
      - name: Create workspace Cargo.toml
        working-directory: orbitrs-workspace
        shell: bash
        run: |
          cat > Cargo.toml << 'EOF'
          [workspace]
          members = [
              "orbiton",
              "orbit",
              "orlint"
          ]
          resolver = "2"

          [workspace.dependencies]
          orbit = { path = "orbit" }
          orlint = { path = "orlint" }
          serde = { version = "1.0", features = ["derive"] }
          thiserror = "1.0"
          EOF
      
      - name: Run security audit
        working-directory: orbitrs-workspace  # Changed from orbitrs-workspace/orbiton
        run: cargo audit # Run from workspace root
  
  outdated-dependencies:
    name: Check Outdated Dependencies
    runs-on: ubuntu-latest
    needs: check
    timeout-minutes: 15
    steps:
      - name: Create workspace directory
        run: mkdir -p ${{ github.workspace }}/orbitrs-workspace
      
      - name: Checkout orbiton
        uses: actions/checkout@v4
        with:
          path: orbitrs-workspace/orbiton
      
      - name: Checkout orbit
        uses: actions/checkout@v4
        with:
          repository: orbitrs/orbit
          path: orbitrs-workspace/orbit
          
      - name: Checkout orlint
        uses: actions/checkout@v4
        with:
          repository: orbitrs/orlint
          path: orbitrs-workspace/orlint
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Install cargo-outdated
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-outdated
      
      - name: Create workspace Cargo.toml
        working-directory: orbitrs-workspace
        shell: bash
        run: |
          cat > Cargo.toml << 'EOF'
          [workspace]
          members = [
              "orbiton",
              "orbit",
              "orlint"
          ]
          resolver = "2"

          [workspace.dependencies]
          orbit = { path = "orbit", version = "0.1.10" }
          orlint = { path = "orlint", version = "0.1.0" }
          serde = { version = "1.0", features = ["derive"] }
          thiserror = "1.0"
          EOF
          
      - name: Check for outdated dependencies
        working-directory: orbitrs-workspace  
        run: cargo outdated --packages orbiton --exit-code 0  # Changed --package to --packages